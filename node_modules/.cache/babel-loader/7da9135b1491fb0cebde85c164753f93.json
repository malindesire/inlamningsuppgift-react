{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ShowAnimal() {\n  _s();\n\n  const [animalName, setAnimalName] = useState(\"\");\n  let params = useParams();\n  useEffect(() => {\n    if (params.name) {\n      setAnimalName(params.name);\n    }\n  }, [params.name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Got \", animalName, \" here!\"]\n  }, void 0, true);\n} // import { Animal } from \"../models/Animal\";\n// interface IShowAnimalProps {\n//   animal: Animal;\n// }\n// export function ShowAnimal(props: IShowAnimalProps) {\n//   let animals: Animal[] = [];\n//   return <div>{props.animal.name}</div>;\n// }\n\n_s(ShowAnimal, \"MltUHOFTlBrRK/CSABy9++T9kyg=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowAnimal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAnimal\");","map":{"version":3,"sources":["/Users/Malin/Documents/Medieinstitutet/6. JavaScript Fördjupning/Examinationer/Inlämning 2 - React/Inlämning 2/zoo/src/components/ShowAnimal.tsx"],"names":["useEffect","useState","useParams","ShowAnimal","animalName","setAnimalName","params","name"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAIK,MAAM,GAAGJ,SAAS,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,CAACC,IAAX,EAAiB;AACfF,MAAAA,aAAa,CAACC,MAAM,CAACC,IAAR,CAAb;AACD;AACF,GAJQ,EAIN,CAACD,MAAM,CAACC,IAAR,CAJM,CAAT;AAMA,sBAAO;AAAA,uBAAOH,UAAP;AAAA,kBAAP;AACD,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;GAxBgBD,U;UAGDD,S;;;KAHCC,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport function ShowAnimal() {\n  const [animalName, setAnimalName] = useState(\"\");\n\n  let params = useParams();\n\n  useEffect(() => {\n    if (params.name) {\n      setAnimalName(params.name);\n    }\n  }, [params.name]);\n\n  return <>Got {animalName} here!</>;\n}\n\n// import { Animal } from \"../models/Animal\";\n\n// interface IShowAnimalProps {\n//   animal: Animal;\n// }\n\n// export function ShowAnimal(props: IShowAnimalProps) {\n//   let animals: Animal[] = [];\n\n//   return <div>{props.animal.name}</div>;\n// }\n"]},"metadata":{},"sourceType":"module"}